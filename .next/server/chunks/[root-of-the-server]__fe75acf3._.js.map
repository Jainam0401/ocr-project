{"version":3,"sources":["turbopack:///[project]/node_modules/node-tesseract-ocr/src/index.js","turbopack:///[project]/node_modules/uuid/dist-node/native.js","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/node_modules/yocto-queue/index.js","turbopack:///[project]/app/api/extract-text/route.ts","turbopack:///[project]/node_modules/uuid/dist-node/regex.js","turbopack:///[project]/node_modules/uuid/dist-node/rng.js","turbopack:///[project]/node_modules/uuid/dist-node/validate.js","turbopack:///[project]/node_modules/uuid/dist-node/stringify.js","turbopack:///[project]/node_modules/p-limit/index.js","turbopack:///[project]/node_modules/uuid/dist-node/v4.js"],"sourcesContent":["const exec = require(\"child_process\").exec\nconst log = console.debug\n\n/**\n * @param input - URL, local image path or Buffer\n * @param config - any OCR options and control parameters\n * @returns default output format is text\n */\nfunction recognize(input, config = {}) {\n  const options = getOptions(config)\n  const binary = config.binary || \"tesseract\"\n  const isSingleLocalFile = typeof input === \"string\" && !input.match(/^https?:\\/\\//)\n  const inputOption = isSingleLocalFile ? `\"${input}\"` : \"stdin\"\n  const command = [binary, inputOption, \"stdout\", ...options].join(\" \")\n\n  if (config.debug) log(\"command\", command)\n\n  return new Promise((resolve, reject) => {\n    const child = exec(command, (error, stdout, stderr) => {\n      if (config.debug) log(stderr)\n      if (error) reject(error)\n      resolve(stdout)\n    })\n    if (inputOption === \"stdin\") pipeInput(input, child)\n  })\n}\n\nfunction pipeInput(input, child) {\n  if (typeof input === \"string\") {\n    const protocol = input.match(/^(.*?):/)[1]\n    return require(protocol).get(input, (response) => {\n      response.pipe(child.stdin)\n    })\n  }\n\n  if (Array.isArray(input)) input = Buffer.from(input.join(\"\\n\"), \"utf-8\")\n  child.stdin.write(input)\n  child.stdin.end()\n}\n\nfunction getOptions(config) {\n  const ocrOptions = [\"tessdata-dir\", \"user-words\", \"user-patterns\", \"psm\", \"oem\", \"dpi\"]\n\n  return Object.entries(config)\n    .map(([key, value]) => {\n      if ([\"debug\", \"presets\", \"binary\"].includes(key)) return\n      if (key === \"lang\") return `-l ${value}`\n      if (ocrOptions.includes(key)) return `--${key} ${value}`\n\n      return `-c ${key}=${value}`\n    })\n    .concat(config.presets) // options -l and --psm must occur before any CONFIGFILE\n    .filter(Boolean)\n}\n\nmodule.exports = {\n  recognize,\n}\n","import { randomUUID } from 'node:crypto';\nexport default { randomUUID };\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { addRequestMeta, getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { setReferenceManifestsSingleton } from \"next/dist/esm/server/app-render/encryption-utils\";\nimport { createServerModuleMap } from \"next/dist/esm/server/app-render/action-utils\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/extract-text/route\",\n        pathname: \"/api/extract-text\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/app/api/extract-text/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    if (routeModule.isDev) {\n        addRequestMeta(req, 'devRequestTimingInternalsEnd', process.hrtime.bigint());\n    }\n    let srcPage = \"/api/extract-text/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, parsedUrl, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname, clientReferenceManifest, serverActionsManifest } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    const render404 = async ()=>{\n        // TODO: should route-module itself handle rendering the 404\n        if (routerServerContext == null ? void 0 : routerServerContext.render404) {\n            await routerServerContext.render404(req, res, parsedUrl, false);\n        } else {\n            res.end('This page could not be found');\n        }\n        return null;\n    };\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                if (nextConfig.experimental.adapterPath) {\n                    return await render404();\n                }\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isStaticGeneration = isIsr && !supportsDynamicResponse;\n    // Before rendering (which initializes component tree modules), we have to\n    // set the reference manifests to our global store so Server Action's\n    // encryption util can access to them at the top level of the page module.\n    if (serverActionsManifest && clientReferenceManifest) {\n        setReferenceManifestsSingleton({\n            page: srcPage,\n            clientReferenceManifest,\n            serverActionsManifest,\n            serverModuleMap: createServerModuleMap({\n                serverActionsManifest\n            })\n        });\n    }\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            cacheComponents: Boolean(nextConfig.cacheComponents),\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: nextConfig.cacheLife,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${srcPage}`);\n                }\n            });\n        };\n        const isMinimalMode = Boolean(process.env.MINIMAL_MODE || getRequestMeta(req, 'minimalMode'));\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!isMinimalMode && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isStaticGeneration,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil,\n                isMinimalMode\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!isMinimalMode) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(isMinimalMode && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, // @ts-expect-error - Argument of type 'Buffer<ArrayBufferLike>' is not assignable to parameter of type 'BodyInit | null | undefined'.\n            new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${srcPage}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isStaticGeneration,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nexport default class Queue {\n\t#head;\n\t#tail;\n\t#size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tenqueue(value) {\n\t\tconst node = new Node(value);\n\n\t\tif (this.#head) {\n\t\t\tthis.#tail.next = node;\n\t\t\tthis.#tail = node;\n\t\t} else {\n\t\t\tthis.#head = node;\n\t\t\tthis.#tail = node;\n\t\t}\n\n\t\tthis.#size++;\n\t}\n\n\tdequeue() {\n\t\tconst current = this.#head;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#head = this.#head.next;\n\t\tthis.#size--;\n\t\treturn current.value;\n\t}\n\n\tpeek() {\n\t\tif (!this.#head) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.#head.value;\n\n\t\t// TODO: Node.js 18.\n\t\t// return this.#head?.value;\n\t}\n\n\tclear() {\n\t\tthis.#head = undefined;\n\t\tthis.#tail = undefined;\n\t\tthis.#size = 0;\n\t}\n\n\tget size() {\n\t\treturn this.#size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this.#head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\t* drain() {\n\t\twhile (this.#head) {\n\t\t\tyield this.dequeue();\n\t\t}\n\t}\n}\n","export const runtime = \"nodejs\";\r\n\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport fs from \"fs/promises\";\r\nimport path from \"path\";\r\nimport { exec } from \"child_process\";\r\nimport util from \"util\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport tesseract from \"node-tesseract-ocr\";\r\nimport pLimit from \"p-limit\";\r\n\r\nexport const maxDuration = 300;\r\nexport const dynamic = \"force-dynamic\";\r\n\r\nconst execAsync = util.promisify(exec);\r\n\r\nexport async function POST(req: NextRequest) {\r\n  let tempDir: string | null = null;\r\n  let pdfPath: string | null = null;\r\n  const startTime = Date.now();\r\n\r\n  try {\r\n    const formData = await req.formData();\r\n    const file = formData.get(\"file\") as File;\r\n    const language = (formData.get(\"language\") as string) || \"eng\";\r\n\r\n    if (!file) {\r\n      return NextResponse.json({ success: false, error: \"No file uploaded\" }, { status: 400 });\r\n    }\r\n\r\n    if (!file.name.toLowerCase().endsWith(\".pdf\")) {\r\n      return NextResponse.json({ success: false, error: \"Only PDF files are supported\" }, { status: 400 });\r\n    }\r\n\r\n    // Temporary directory\r\n    const uniqueId = uuidv4();\r\n    tempDir = path.join(process.cwd(), \"temp\", uniqueId);\r\n    await fs.mkdir(tempDir, { recursive: true });\r\n\r\n    const arrayBuffer = await file.arrayBuffer();\r\n    const buffer = Buffer.from(arrayBuffer);\r\n    pdfPath = path.join(tempDir, `${uniqueId}.pdf`);\r\n    await fs.writeFile(pdfPath, buffer);\r\n\r\n    console.log(`Uploaded: ${file.name} (${(buffer.length / 1024).toFixed(2)} KB)`);\r\n\r\n    const pdfLib = await import(\"pdf-lib\");\r\n    const pdfDoc = await pdfLib.PDFDocument.load(buffer);\r\n    const totalPages = pdfDoc.getPageCount();\r\n    console.log(`Total pages: ${totalPages}`);\r\n\r\n    console.log(\"Converting PDF to images...\");\r\n    await execAsync(`pdftoppm \"${pdfPath}\" \"${path.join(tempDir, \"page\")}\" -png -r 200`);\r\n    console.log(\"Conversion done\");\r\n\r\n    const config = { lang: language, oem: 1, psm: 3 };\r\n    const limit = pLimit(3);\r\n    const ocrTasks: Promise<string>[] = [];\r\n\r\n    for (let pageNum = 1; pageNum <= totalPages; pageNum++) {\r\n      const imagePath = path.join(tempDir, `page-${pageNum}.png`);\r\n\r\n      ocrTasks.push(\r\n        limit(async () => {\r\n          console.log(`Running OCR on page ${pageNum}/${totalPages}`);\r\n          try {\r\n            const text = await tesseract.recognize(imagePath, config);\r\n            return `\\n\\n--- Page ${pageNum} ---\\n${text}`;\r\n          } catch (err: any) {\r\n            console.error(`OCR failed on page ${pageNum}: ${err.message}`);\r\n            return `\\n\\n--- Page ${pageNum} ---\\n[Error: ${err.message}]`;\r\n          }\r\n        })\r\n      );\r\n    }\r\n\r\n    const results = await Promise.allSettled(ocrTasks);\r\n    const extractedText = results\r\n      .map((r, i) => (r.status === \"fulfilled\" ? r.value : `--- Page ${i + 1} --- [Error]`))\r\n      .join(\"\\n\");\r\n\r\n    const totalTime = ((Date.now() - startTime) / 1000).toFixed(2);\r\n    console.log(`OCR completed in ${totalTime}s`);\r\n     if (tempDir) {\r\n      (async () => {\r\n        try {\r\n          await fs.rm(tempDir, { recursive: true, force: true });\r\n          console.log(`Temporary folder deleted: ${tempDir}`);\r\n        } catch (cleanupError: any) {\r\n          console.error(\"Cleanup error:\", cleanupError.message);\r\n        }\r\n      })();\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      text: extractedText.trim(),\r\n      metadata: {\r\n        fileName: file.name,\r\n        fileSize: `${(buffer.length / 1024).toFixed(2)} KB`,\r\n        totalPages,\r\n        language,\r\n        processingTime: `${totalTime}s`,\r\n        concurrency: 3,\r\n        dpi: 200,\r\n      },\r\n    });\r\n  } catch (error: any) {\r\n    console.error(\"Error processing PDF:\", error);\r\n    return NextResponse.json(\r\n      { success: false, error: error.message || \"Failed to process PDF\" },\r\n      { status: 500 }\r\n    );\r\n  } finally {\r\n    if (tempDir) {\r\n      await fs.rm(tempDir, { recursive: true, force: true }).catch((e) =>\r\n        console.error(\"Cleanup error:\", e.message)\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport async function GET() {\r\n  return NextResponse.json({\r\n    status: \"healthy\",\r\n    endpoint: \"/api/extract-text\",\r\n    methods: [\"POST\"],\r\n    description: \"PDF to text OCR extraction API\",\r\n  });\r\n}\r\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n","import { randomFillSync } from 'node:crypto';\nconst rnds8Pool = new Uint8Array(256);\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, (poolPtr += 16));\n}\n","import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import Queue from 'yocto-queue';\n\nexport default function pLimit(concurrency) {\n\tvalidateConcurrency(concurrency);\n\n\tconst queue = new Queue();\n\tlet activeCount = 0;\n\n\tconst resumeNext = () => {\n\t\t// Process the next queued function if we're under the concurrency limit\n\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\tactiveCount++;\n\t\t\tqueue.dequeue()();\n\t\t}\n\t};\n\n\tconst next = () => {\n\t\tactiveCount--;\n\t\tresumeNext();\n\t};\n\n\tconst run = async (function_, resolve, arguments_) => {\n\t\t// Execute the function and capture the result promise\n\t\tconst result = (async () => function_(...arguments_))();\n\n\t\t// Resolve immediately with the promise (don't wait for completion)\n\t\tresolve(result);\n\n\t\t// Wait for the function to complete (success or failure)\n\t\t// We catch errors here to prevent unhandled rejections,\n\t\t// but the original promise rejection is preserved for the caller\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\t// Decrement active count and process next queued function\n\t\tnext();\n\t};\n\n\tconst enqueue = (function_, resolve, arguments_) => {\n\t\t// Queue the internal resolve function instead of the run function\n\t\t// to preserve the asynchronous execution context.\n\t\tnew Promise(internalResolve => { // eslint-disable-line promise/param-names\n\t\t\tqueue.enqueue(internalResolve);\n\t\t}).then(run.bind(undefined, function_, resolve, arguments_)); // eslint-disable-line promise/prefer-await-to-then\n\n\t\t// Start processing immediately if we haven't reached the concurrency limit\n\t\tif (activeCount < concurrency) {\n\t\t\tresumeNext();\n\t\t}\n\t};\n\n\tconst generator = (function_, ...arguments_) => new Promise(resolve => {\n\t\tenqueue(function_, resolve, arguments_);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount,\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size,\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue() {\n\t\t\t\tqueue.clear();\n\t\t\t},\n\t\t},\n\t\tconcurrency: {\n\t\t\tget: () => concurrency,\n\n\t\t\tset(newConcurrency) {\n\t\t\t\tvalidateConcurrency(newConcurrency);\n\t\t\t\tconcurrency = newConcurrency;\n\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t// eslint-disable-next-line no-unmodified-loop-condition\n\t\t\t\t\twhile (activeCount < concurrency && queue.size > 0) {\n\t\t\t\t\t\tresumeNext();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t},\n\t\tmap: {\n\t\t\tasync value(iterable, function_) {\n\t\t\t\tconst promises = Array.from(iterable, (value, index) => this(function_, value, index));\n\t\t\t\treturn Promise.all(promises);\n\t\t\t},\n\t\t},\n\t});\n\n\treturn generator;\n}\n\nexport function limitFunction(function_, options) {\n\tconst {concurrency} = options;\n\tconst limit = pLimit(concurrency);\n\n\treturn (...arguments_) => limit(() => function_(...arguments_));\n}\n\nfunction validateConcurrency(concurrency) {\n\tif (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n}\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction _v4(options, buf, offset) {\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    return _v4(options, buf, offset);\n}\nexport default v4;\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,5,6,7,8,9,10]}